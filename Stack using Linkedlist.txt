//Name Ankit Kumar Mishra
//Roll 2100290120030
//Program to implement stack using linkedlist
#include<stdio.h>
#include<stdlib.h>
struct node{
    int info;
    struct node *link;
}*top=NULL;
void push( int item);
int pop();
int peek();
int isEmpty();
int isFull();
void display();

int main()
{
    int choice,item;
    while(1)
    {
        printf("1.Push\n");
        printf("2.Pop\n");
        printf("3.Display item at top\n");
        printf("4.Display all the elements\n");
        printf("5.Quit\n");
        scanf("%d",&choice);
        switch (choice)
        {
            case 1: 
            printf("Enter the item to be pushed: ");
            scanf("%d",&item);
            push(item);
            break;
            case 2: 
            item=pop(); 
            printf("Element deleted is %d :",item);
            break;
            case 3:
            printf("Element at the top is %d :",peek());
            break;
            case 4: display();
            break;
            case 5:
            exit(1);
            default: printf("Enter valid choice\n");
        }
    }
}
void push(int item)
{
    struct node *tmp;
    tmp=(struct node *)malloc(sizeof(struct node));
    if(tmp==NULL)
    {
        printf("Stack overflow \n");
        return;
    }
    tmp->info=item;
    tmp->link=top;
    top=tmp;
}
int pop()
{
    struct node* temp;
    int item;
    if(isEmpty())
    {
        printf("stack underflow\n");
        exit(1);
    }
    temp=top;
    item=temp->info;
    top=temp->link;
    free(temp);
    return item;
}
int peek()
{
    if(isEmpty())
    {printf("Stack underflow\n");
    exit(1);
}
return top->info;
}
int isEmpty()
{
    if(top==NULL)
    return 1;
    else
    return 0;
}
void display()
{
    struct node *ptr;
    ptr=top;
    if(isEmpty())
    {printf("Stack underflow\n");
    return;}
    printf("Stack Elements :\n");
    while(ptr!=NULL)
    {
        printf(" %d\n",ptr->info);
        ptr=ptr->link;
    }
    printf("\n");
    
    }

